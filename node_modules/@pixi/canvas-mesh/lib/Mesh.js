'use strict';

var mesh = require('@pixi/mesh');
require('./settings.js');
var core = require('@pixi/core');

let warned = false;
mesh.Mesh.prototype._cachedTint = 16777215;
mesh.Mesh.prototype._tintedCanvas = null;
mesh.Mesh.prototype._cachedTexture = null;
mesh.Mesh.prototype._renderCanvas = function _renderCanvas(renderer) {
  if (this.shader.uvMatrix) {
    this.shader.uvMatrix.update();
    this.calculateUvs();
  }
  if (this.material._renderCanvas) {
    this.material._renderCanvas(renderer, this);
  } else if (!warned) {
    warned = true;
    if (globalThis.console) {
      console.warn("Mesh with custom shaders are not supported in CanvasRenderer.");
    }
  }
};
mesh.Mesh.prototype._canvasPadding = null;
Object.defineProperty(mesh.Mesh.prototype, "canvasPadding", {
  get() {
    return this._canvasPadding !== null ? this._canvasPadding : core.settings.MESH_CANVAS_PADDING;
  },
  set(value) {
    this._canvasPadding = value;
  }
});
//# sourceMappingURL=Mesh.js.map
